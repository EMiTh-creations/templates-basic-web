// https://css-tricks.com/snippets/sass/mixin-manage-breakpoints/

// Usage:
// @include respond-to("small") {
// @include respond-to("medium") {
// @include respond-to("large") {
// @include respond-to("x-large") {
// and for max-width queries:
// @include respond-to("small", max) {
// @include respond-to("medium", max) {
// @include respond-to("large", max) {
// @include respond-to("x-large", max) {

$breakpoints: (
    "small": 640px,
    "medium": 768px,
    "large": 1024px,
    "x-large": 1280px,
) !default;

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint, $type: min) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        $width: map_get($breakpoints, $breakpoint);

        @if $type == max {
            $width: $width - 1px;
        }
        // Prints a media query based on the value
        @media (#{$type}-width: $width) {
            @content;
        }
    }

    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
              + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

@mixin margins--auto {
    margin: {
        left: auto;
        right: auto;
    }
}

@mixin hidden {
    display: none;
    visibility: hidden;
}
